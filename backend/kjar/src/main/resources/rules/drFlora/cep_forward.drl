import com.ftn.sbnz.model.FinalnaDijagnoza;
import com.ftn.sbnz.model.Preparat;
import com.ftn.sbnz.model.Bolest;
import com.ftn.sbnz.model.enums.FazaBiljke;
import com.ftn.sbnz.model.enums.PotkategorijaPreparata;
import com.ftn.sbnz.model.Preporuka;
import java.time.LocalDate;
import java.util.Date;
import com.ftn.sbnz.model.Biljka;
import com.ftn.sbnz.model.enums.KategorijaPreparata;
import com.ftn.sbnz.model.enums.KategorijaBiljke;
import com.ftn.sbnz.event.NeizlecenaBolestVoca;
import com.ftn.sbnz.event.UgrozenaBiljka;
import com.ftn.sbnz.event.NeizlecenaBolestPovrca;
import com.ftn.sbnz.event.UnosSimptoma;

declare DuplaDozaSlabogPreparataAlarm
    @role(event)
    biljka: Biljka
    bolest: Bolest
end

declare PromenaSlabogUJakPreparatAlarm
    @role(event)
    biljka: Biljka
    bolest: Bolest
end

declare PreporucenJosJedanPreparat
    @role(event)
    biljka: Biljka
    bolest: Bolest
end
declare PovecanaDozaJakogPreparataAlarm
    @role(event)
    biljka: Biljka
    bolest: Bolest
end

declare NapomenaZaInsekticidAlarm
    @role(event)
    biljka: Biljka
    bolest: Bolest
    preparat: Preparat
end

rule "Dijagnoza iste bolesti 2 ili vise puta kod istog voce u istoj fazi u mesec dana -> aktivirati alarm NeizlecenaBolestVoca"
    no-loop
    when 
        $dijagnoza: FinalnaDijagnoza($id: id, 
                                    $bolest: bolest, 
                                    $preparat: preporuceniPreparat, 
                                    $biljka: biljka, 
                                    biljka.kategorija == KategorijaBiljke.VOCE,
                                    $fazaBiljke: fazaBiljke,
                                    datumPreporuke.isAfter(LocalDate.now().minusMonths(1))
                                    ) 
        Number(intValue >= 1) from accumulate(
            $d : FinalnaDijagnoza(this != $dijagnoza,
                                          bolest.id == $bolest.id,
                                          biljka.id == $biljka.id,
                                          fazaBiljke == $fazaBiljke,
                                          this meets[744h] $dijagnoza //1 month
                                         ), 
                                          count($d)
        )
        not (NeizlecenaBolestVoca(biljka == $biljka, bolest == $bolest, fazaJavljanja == $fazaBiljke))
    then
        // System.out.println("Neizlecena bolest voca za " + $biljka.getId() + ", bolest " + $bolest.getNaziv());
        insert(new NeizlecenaBolestVoca($biljka, $bolest, $preparat, $fazaBiljke));
end

rule "NeizlecenaBolestVoca i preporuceni slabi preparat za bolest za koju ne postoji jak preparat -> preporuciti duplu dozu preparata" 
    no-loop
    when 
        $alarm: NeizlecenaBolestVoca($biljka: biljka, 
                                    $bolest: bolest,  
                                    bolest.jakiPreparati.size() == 0,
                                    $fazaBiljke : fazaJavljanja, 
                                    $preparat: preparat, 
                                    preparat.potkategorija == PotkategorijaPreparata.SLAB
                                    )
        
        $dijagnoza : FinalnaDijagnoza(bolest.id == $bolest.id,
                                    biljka.id == $biljka.id,
                                    preporuceniPreparat.id == $preparat.id,
                                    $preporuka: preporuka,
                                    datumPreporuke == LocalDate.now(),
                                    this meets[5m] $alarm)
                                    // datumPreporuke == LocalDate.now()
        
        not(DuplaDozaSlabogPreparataAlarm(biljka == $biljka, bolest == $bolest))
        $pr: Preporuka(this == $preporuka)
    then
        // System.out.println("Dupla doza " + $biljka.getId() + ", bolest " + $bolest.getNaziv());
        modify($pr) {setPreporucenaDoza($pr.getPreporucenaDoza() * 2),
                            modifyMessage("Preporucena je dupla doza preparata jer se bolest javila dva puta u mesec dana.")}
        insert(new DuplaDozaSlabogPreparataAlarm($biljka, $bolest));
end

rule "NeizlecenaBolestVoca i preporuceni slabi preparat za bolest za koju postoji jak preparat -> preporuciti jak preparat" 
    no-loop
    when 
        $alarm: NeizlecenaBolestVoca($biljka: biljka, 
                                    $bolest: bolest,  
                                    bolest.jakiPreparati.size() > 0,
                                    $fazaBiljke : fazaJavljanja, 
                                    $preparat: preparat, 
                                    preparat.potkategorija == PotkategorijaPreparata.SLAB
                                    )
        
        $dijagnoza : FinalnaDijagnoza(bolest.id == $bolest.id,
                                    biljka.id == $biljka.id,
                                    preporuceniPreparat.id == $preparat.id,
                                    $preporuka: preporuka,
                                    datumPreporuke == LocalDate.now(),
                                    this meets[5m] $alarm)
        

        not(PromenaSlabogUJakPreparatAlarm(biljka == $biljka, bolest == $bolest))
        $pr: Preporuka(this == $preporuka)
        
    then
        // System.out.println("Neizlecena bolest alarm jak preparat " + $alarm.getPreparat().getNaziv());
        modify($dijagnoza) {setPreparat($bolest.getTopJakPreparat())}
        modify($pr) {setPreporucenaDoza($bolest.getTopJakPreparat().getKoncentracija()), 
                                    setNazivPreparata($bolest.getTopJakPreparat().getNaziv()),
                                    setOpisPreparata($bolest.getTopJakPreparat().getPotkategorijaPreparata() + " " + $bolest.getTopJakPreparat().getKategorijaPreparata()),
                                    setPoruka("Preporucen je jaci preparat umesto slabijeg jer je ista bolest dijagnostikovana dva puta u mesec dana.") }
        modify($alarm) {setPreparat($bolest.getTopJakPreparat())}
        insert(new PromenaSlabogUJakPreparatAlarm($biljka, $bolest));
end

rule "NeizlecenaBolestVoca i preporuceni jak preparat insekticid -> napomena za upotrebu u ishrani" 
    no-loop
    when 
        $alarm: NeizlecenaBolestVoca($biljka: biljka, 
                                    $bolest: bolest,  
                                    bolest.jakiPreparati.size() > 0,
                                    $fazaBiljke : fazaJavljanja,
                                    $preparat: preparat,       
                                    preparat.potkategorija == PotkategorijaPreparata.JAK,                         
                                    preparat.primarnaKategorija == KategorijaPreparata.INSEKTICID                                 
                                    )
                
        $preporuka: Preporuka(bolest.id == $bolest.id,
                              nazivPreparata == $preparat.naziv,
                              biljka.id == $biljka.id,
                              this meets[5m] $alarm)
        
        not(NapomenaZaInsekticidAlarm(biljka == $biljka, bolest == $bolest, preparat == $preparat))
        
    then
        insert(new NapomenaZaInsekticidAlarm($biljka, $bolest, $preparat));
        modify($preporuka) {setPoruka("Biljku ne upotrebljavati u ishrani do 2 nedelje nakon prskanja.")}
end


rule "Dijagnoza iste bolesti 2 ili vise puta kod istog povrca u istoj fazi u mesec dana -> aktivirati alarm NeizlecenaBolestPovrca"
    no-loop
    when 
        $dijagnoza: FinalnaDijagnoza($id: id, 
                                    $bolest: bolest, 
                                    $preparat: preporuceniPreparat, 
                                    $biljka: biljka, 
                                    biljka.kategorija == KategorijaBiljke.POVRCE,
                                    $fazaBiljke: fazaBiljke,
                                    datumPreporuke.isAfter(LocalDate.now().minusMonths(1))
                                    ) 
        Number(intValue >= 1) from accumulate(
            $d : FinalnaDijagnoza(this != $dijagnoza,
                                bolest.id == $bolest.id,
                                biljka.id == $biljka.id,
                                fazaBiljke == $fazaBiljke,
                                this meets[744h] $dijagnoza //1 month
                                ), 
                count($d)
        )
        not (NeizlecenaBolestPovrca(biljka == $biljka, bolest == $bolest, fazaJavljanja == $fazaBiljke))
    then
        // System.out.println("Neizlecena bolest povrca za " + $biljka.getId() + ", bolest " + $bolest.getNaziv());
        insert(new NeizlecenaBolestPovrca($biljka, $bolest, $preparat, $fazaBiljke));
end


rule "NeizlecenaBolestPovrca paprike i preporuceni slabi preparat za bolest za koju postoji jak preparat -> preporuciti jak preparat" 
    no-loop
    when 
        $alarm: NeizlecenaBolestPovrca($biljka: biljka, 
                                    biljka.tip.naziv == "paprika",
                                    $bolest: bolest,  
                                    bolest.jakiPreparati.size() > 0,
                                    $fazaBiljke : fazaJavljanja, 
                                    $preparat: preparat, 
                                    preparat.potkategorija == PotkategorijaPreparata.SLAB
                                    )
        
        $dijagnoza : FinalnaDijagnoza(bolest.id == $bolest.id,
                                    biljka.id == $biljka.id,
                                    preporuceniPreparat.id == $preparat.id,
                                    $preporuka: preporuka,
                                    datumPreporuke == LocalDate.now(),
                                    this meets[5m] $alarm)
        

        not(PromenaSlabogUJakPreparatAlarm(biljka == $biljka, bolest == $bolest))
        $pr: Preporuka(this == $preporuka)
        
    then
        // System.out.println("SLAB, ima jak -> novi_JAK");
        Preparat novJak = $bolest.getTopJakPreparat();
        modify($dijagnoza) {setPreparat(novJak)}
        modify($pr) {setPreporucenaDoza(novJak.getKoncentracija()), 
                            setNazivPreparata(novJak.getNaziv()),
                            setOpisPreparata(novJak.getPotkategorijaPreparata() + " " + novJak.getKategorijaPreparata()),
                            modifyMessage("Preporucen je jaci preparat umesto slabijeg jer je ista bolest dijagnostikovana dva puta u mesec dana.") }
        modify($alarm) {setPreparat(novJak)}
        insert(new PromenaSlabogUJakPreparatAlarm($biljka, $bolest));
end

rule "NeizlecenaBolestPovrca paprike i preporuceni slabi preparat za bolest za koju ne postoji jak preparat -> preporuciti jos jedan slab preparat duplirane doze" 
    no-loop
    when 
        $alarm: NeizlecenaBolestPovrca($biljka: biljka, 
                                    biljka.tip.naziv == "paprika",
                                    $bolest: bolest,  
                                    bolest.jakiPreparati.size() == 0,
                                    $fazaBiljke : fazaJavljanja, 
                                    $preparat: preparat, 
                                    preparat.potkategorija == PotkategorijaPreparata.SLAB
                                    )
        
        $dijagnoza : FinalnaDijagnoza(bolest.id == $bolest.id,
                                    biljka.id == $biljka.id,
                                    preporuceniPreparat.id == $preparat.id,
                                    $preporuka: preporuka,
                                    !preporuka.poruka.contains("Preporucena upotreba i"),
                                    datumPreporuke == LocalDate.now(),
                                    this meets[5m] $alarm)
        
        not(PreporucenJosJedanPreparat(biljka == $biljka, bolest == $bolest))
        $pr: Preporuka(this == $preporuka)
        
    then
        Preparat topSlabPreparat = $bolest.getTopSlabPreparat($preparat);
        // System.out.println("SLAB, nema JAK -> + 2*novi_slab");
        if (topSlabPreparat != null) {
            modify($pr) {
                setPoruka("Preporucena upotreba i " +  topSlabPreparat.getNaziv() + " koncentracije: "  +  topSlabPreparat.getKoncentracija() * 2) 
            }
            insert(new PreporucenJosJedanPreparat($biljka, $bolest));
        }
end


rule "NeizlecenaBolestPovrca paprike i preporuceni jaki preparat za bolest za koju ne postoji slab preparat -> preporuciti 1.5 dozu preparata" 
    no-loop
    when 
        $alarm: NeizlecenaBolestPovrca($biljka: biljka, 
                                    biljka.tip.naziv == "paprika",
                                    $bolest: bolest,  
                                    bolest.slabiPreparati.size() == 0,
                                    $fazaBiljke : fazaJavljanja, 
                                    $preparat: preparat, 
                                    preparat.potkategorija == PotkategorijaPreparata.JAK
                                    )
        
        $dijagnoza : FinalnaDijagnoza(bolest.id == $bolest.id,
                                    biljka.id == $biljka.id,
                                    preporuceniPreparat.id == $preparat.id,
                                    $preporuka: preporuka,
                                    datumPreporuke == LocalDate.now(),
                                    this meets[5m] $alarm)
        
        not(PovecanaDozaJakogPreparataAlarm(biljka == $biljka, bolest == $bolest))
        not(UgrozenaBiljka(biljka == $biljka))
        $pr: Preporuka(this == $preporuka)
    then
        // System.out.println("JAK, nema slab ->  1.5 * isti_JAK");
        modify($pr) {setPreporucenaDoza($preporuka.getPreporucenaDoza() * 1.5),
                            setPoruka("Preporucena je veca doza preparata jer se bolest javila dva puta u mesec dana.")}
        insert(new PovecanaDozaJakogPreparataAlarm($biljka, $bolest));
end


rule "Simptomi se javljaju na vise lokacija i postoji slab preparat koncetracije > 0.4% za bolest → preporuciti preparat koncetracije > 0.4%"
    no-loop
    when    
        $unos_simptoma: UnosSimptoma($simptomi: simptomi,
                                     $idBiljke: idBiljke)
        $s1: Simptom($simptomi.contains(this),
                    $lokacija: lokacija)
        Number(intValue >= 1) from accumulate(
            $s: Simptom(this != $s1,
                        $simptomi.contains(this),
                        lokacija != $lokacija),
                        count($s)
        )
        $dijagnoza: FinalnaDijagnoza(this meets[2m] $unos_simptoma,
                                     biljka.id == $idBiljke,
                                     $preporuka: preporuka,
                                     preporuceniPreparat.potkategorija == PotkategorijaPreparata.SLAB,
                                     $bolest: bolest)
        $pr: Preporuka(this == $preporuka,
                       preporucenaDoza <= 0.4)
    then
        //System.out.println("slab <= 0.4");
        modify($dijagnoza){setPreparat($bolest.getNajjaciSlabPreparat())}
        modify($pr){setNazivPreparata($bolest.getNajjaciSlabPreparat().getNaziv()),
                    setPreporucenaDoza($bolest.getNajjaciSlabPreparat().getKoncentracija()),
                    setOpisPreparata($bolest.getNajjaciSlabPreparat().getPotkategorijaPreparata() + " " + $bolest.getNajjaciSlabPreparat().getKategorijaPreparata())}

end;

rule "Simptomi se javljaju na vise lokacija i postoji jak preparat koncetracije > 0.4% za bolest → preporuciti preparat koncetracije > 0.4%"
    no-loop
    when    
        $unos_simptoma: UnosSimptoma($simptomi: simptomi,
                                     $idBiljke: idBiljke)
        $s1: Simptom($simptomi.contains(this),
                    $lokacija: lokacija)
        Number(intValue >= 1) from accumulate(
            $s: Simptom(this != $s1,
                        $simptomi.contains(this),
                        lokacija != $lokacija),
                        count($s)
        )
        $dijagnoza: FinalnaDijagnoza(this meets[2m] $unos_simptoma,
                                     biljka.id == $idBiljke,
                                     $preporuka: preporuka,
                                     preporuceniPreparat.potkategorija == PotkategorijaPreparata.JAK,
                                     $bolest: bolest)
        $pr: Preporuka(this == $preporuka,
                       preporucenaDoza <= 0.4)
    then
        //System.out.println("jak <= 0.4");
        modify($dijagnoza){setPreparat($bolest.getNajjaciJakPreparat())}
        modify($pr){setNazivPreparata($bolest.getNajjaciJakPreparat().getNaziv()),
                    setPreporucenaDoza($bolest.getNajjaciJakPreparat().getKoncentracija()),
                    setOpisPreparata($bolest.getNajjaciJakPreparat().getPotkategorijaPreparata() + " " + $bolest.getNajjaciJakPreparat().getKategorijaPreparata())}

end;


rule "alarm NeizlecenaBolestVoca se javio bar 3 puta u roku od 6 meseci → aktivirati alarm UgrozenaBiljka"
    no-loop
    when
        $neizlecen_bolest: NeizlecenaBolestVoca(
                                                $biljka: biljka, 
                                                $bolest: bolest,  
                                                $fazaBiljke : fazaJavljanja, 
                                                $preparat: preparat
                                            ) over window: time(4320h) //6meseci
        Number(intValue >= 2) from accumulate(
            $d : NeizlecenaBolestVoca(this != $neizlecen_bolest,
                                          biljka.id == $biljka.id,
                                          this meets[4320h] $neizlecen_bolest //6 month
                                         ), 
                                          count($d)
        ) 
         not (UgrozenaBiljka(biljka == $biljka, $faza: fazaBiljke))
    then
        //System.out.println("UgrozenaBiljkAlarma " + $biljka.getId());
        insert(new UgrozenaBiljka($biljka, $fazaBiljke));
       
end;

rule "alarm NeizlecenaBolestPovrca se javio bar 3 puta u roku od 6 meseci → aktivirati alarm UgrozenaBiljka"
    no-loop
    when
        $neizlecen_bolest: NeizlecenaBolestPovrca(
                                                $biljka: biljka, 
                                                $bolest: bolest,  
                                                $fazaBiljke : fazaJavljanja, 
                                                $preparat: preparat
                                            ) over window: time(4320h) //6meseci
        Number(intValue >= 2) from accumulate(
            $d : NeizlecenaBolestPovrca(this != $neizlecen_bolest,
                                          biljka.id == $biljka.id,
                                          this meets[4320h] $neizlecen_bolest //6 month
                                         ), 
                                          count($d)
        ) 
         not (UgrozenaBiljka(biljka == $biljka, $faza: fazaBiljke))
    then
        //System.out.println("UgrozenaBiljkAlarma " + $biljka.getId());
        insert(new UgrozenaBiljka($biljka, $fazaBiljke));
       
end;


rule "UgrozenaBiljka u fazi cvetanja -preporuka za dodatne proizvode"
    no-loop 
    when    
        $alarm: UgrozenaBiljka($biljka: biljka,
                                    $fazaBiljke: fazaBiljke,
                                    fazaBiljke == FazaBiljke.CVETANJE)
    
        $finalna_dijagnoza: FinalnaDijagnoza(
                                          biljka.id == $biljka.id,
                                          fazaBiljke == $fazaBiljke,
                                          $preporuka: preporuka,
                                          this meets[5m] $alarm //sada
                                         )
        $pr: Preporuka(this == $preporuka)
    then
        modify($pr){ modifyMessage("Vasa biljka je ugrozena jer je ovo 3. neizlecena bolest u pola godine. Preporucuje se upotreba pomocnih preparata FOLIGAL BOR, FOLIGAL MANGAN I FOLIGAL CINK.")};
        //System.out.println("UgrozenaBiljkAlarma cvetanje" + $biljka.getId());

end;


rule "UgrozenaBiljka u fazi listanja  -preporuka za dodatne proizvode"
    no-loop
    when    
        $alarm: UgrozenaBiljka($biljka: biljka,
                                    $fazaBiljke: fazaBiljke,
                                    fazaBiljke == FazaBiljke.LISTANJE)
    
        $finalna_dijagnoza: FinalnaDijagnoza( biljka.id == $biljka.id,
                                    fazaBiljke == $fazaBiljke,
                                    $preporuka: preporuka,
                                    this meets[5m] $alarm //sada
                                         )
        $pr: Preporuka(this == $preporuka)
    then
        //System.out.println("UgrozenaBiljkAlarma listanje "  + $biljka.getId() );
        modify($pr){ modifyMessage("Vasa biljka je ugrozena jer je ovo 3. neizlecena bolest u pola godine, preporucuje se upotreba pomocnih preparata FOLIGAL BOR i FOLIGAL CINK.");};
end;



rule "UgrozenaBiljka u fazi formiranja ploda  -preporuka za dodatne proizvode"
    no-loop
    when    
        $alarm: UgrozenaBiljka($biljka: biljka,
                                    $fazaBiljke: fazaBiljke,
                                    fazaBiljke == FazaBiljke.FORMIRANJE_PLODA)
    
        $finalna_dijagnoza: FinalnaDijagnoza( biljka.id == $biljka.id,
                                    fazaBiljke == $fazaBiljke,
                                    $preporuka: preporuka,
                                    this meets[5m] $alarm //sada
                                         ) //dodati neki alarm ili stanje ovde
        $pr: Preporuka(this == $preporuka)
    then
        //System.out.println("UgrozenaBiljkAlarma listanje "  + $biljka.getId() );
        modify($pr){ modifyMessage("Vasa biljka je ugrozena jer je ovo 3. neizlecena bolest u pola godine, preporucuje se upotreba pomocnih preparata FOLIGAL KALCIJUM.");};
end;
